<div class="contestant">
  <div class="errors"></div>
  <% form_tag "contestant", :id => "contestant_form" do%>
    <p>
      <b>Ersteller:</b> <span class="creator"><%= prelim.person.name %></span>
    </p>
    <p>
      <% role = prelim.person == prelim.school.person ? prelim.school.contact_function : "AnmelderIn" %>
      <b>Angegebene Rolle:</b> <span class="contact_function"><%= role %></span><br>
    </p>
    <% unless prelim.contestant %>
      <p>
        <b>Rolle für Team:</b><%= select_tag "creator_role", options_for_select([["LehrerIn","teacher"], ["SchülerIn", "pupil"]]) %>
      </p>
    <% end %>
    <p style="margin-top: 15px;">
      <b>Voranm. Team:</b><span class="preliminary_name"><%= prelim.name %></span>
    </p>
    <p>
      <b>Schule:</b><span class="school"><%= prelim.school.name %></span>
    </p>
    <p>
      <b>Ort:</b><span class="location"><%= prelim.school.location %> / <%= prelim.school.state %></span>
    </p>
    <p>
      <% suggested_name = "#{prelim.school.name} - #{prelim.name}" %>
      <% suggested_name = prelim.contestant.name if prelim.contestant %>
    </p>
    <p>
      <b>Name:</b> <%= text_field_tag "team_name", suggested_name %> 
    <span style="font-style: italic; float: right;">( <span id="current_chars" style="font-weight: bold;"><%= suggested_name.length %></span> von max. 24 Zeichen)</span>
    <br><br>
    </p>
    <p>
      <b>Einstufung:</b> <%= select_tag "ranking", options_for_select([["Einsteiger", "beginner"],["Fortgeschritten","advanced"],["Außer Konkurrenz","none"]]) %>
    </p>
    <p>
      <% tutor = (prelim.contestant ? prelim.contestant.people.select{|p| p.has_role?("tutor", prelim.contestant)}.first : nil) %>
      <b>Betreuer:</b> <a id="reset_tutor", href="#" style="<%= "display:none;" unless tutor %>">(zurücksetzen)</a>
    </p>
    <p>
    <%= text_field_tag "tutor", (tutor ? "#{tutor.name} - #{tutor.email}" : ""), :style => "width: 100%; margin-bottom:15px;", :disabled => !!tutor %>  
    </p>
    <% if prelim.contestant %>
      <b>Team entfernen</b> <%= check_box_tag "delete", "1", false %>
    <% end %>
    <p style="margin-top: 25px;">
    <% if prelim.contestant %>
        <%= submit_tag "Änderungen speichern", :id => "edit" %>
      <% else %>
        <%= submit_tag "Team übernehmen", :id => "add" %>
      <% end %>
    </p>
  <% end %>
  <% javascript_tag do %>
    $(function() {
      $("#team_name").bind("keyup",function(){
        refresh_counter($(this),$("#current_chars"));
	refresh_counter_confirm($(this),$("#current_chars"),$("#edit"),"Testmsg");
	refresh_counter_confirm($(this),$("#current_chars"),$("#add"),"Testmsg");
      });
      
      // Initalize counter
      refresh_counter($("#team_name"),$("#current_chars"));
      refresh_counter_confirm($(this),$("#current_chars"),$("#edit"),"Testmsg");
      refresh_counter_confirm($(this),$("#current_chars"),$("#add"),"Testmsg");

      <% if prelim.contestant %>
        $("#ranking option[value='<%=prelim.contestant.ranking%>']").attr("selected",true)
      <% end %>

      $("#contestant_form").bind("submit", function(){
          $(".errors").html("")
          var do_delete = $("#delete").attr("checked")
          $.ajax({
          url: "<%= update_team_season_path(@season) %>",
            type: "POST",
            dataType: "json",
            data: {preliminary_contestant : <%= prelim.id %>, contestant : {name : $("#team_name").attr("value"), ranking : $("#ranking").attr("value"), creator_role : $("#creator_role").attr("value"), delete : do_delete, tutor : $("#tutor").attr("value")}},
          
            complete: function() {
              //called when complete
            },
          
            success: function(resp) {
            if(resp[0] == "ok"){
              <% unless prelim.contestant %>
                $("#preliminary_contestants option[value='<%=prelim.id%>']").remove()

                // Insert the new contestant in alphabetical order
                var last_lower;
                $("#contestants option").each(function(){
                    if($(this).text() < $("#team_name").attr("value")){
                      last_lower = $(this);
                    }
                })   
                var con = "<option value='"+resp[1]+"'>"+$("#team_name").attr('value')+"</option>";
                if(last_lower){
                  last_lower.after(con);
                }else{
                  $("#contestants option:first").before(con);
                }
   
              <% end %>
              if(do_delete){
              $("#contestants option[value='"+resp[1]+"']").remove()

              // Insert the preliminary contestant in alphabetical order
              var last_lower;
              $("#preliminary_contestants option").each(function(){
                  if($(this).text() < "<%= "#{prelim.school.name} - #{prelim.name}" %>"){
                    last_lower = $(this);
                  }
              })   
              var prelim =  "<option value='<%= prelim.id %>'><%= "#{prelim.school.name} - #{prelim.name}" %></option>";
              if(last_lower){
                last_lower.after(prelim);
              }else{
                $("#preliminary_contestants option:first").before(prelim);
              }
 
               $.getScript('<%= new_team_season_url(@season, :preliminary_contestant => prelim) %>')
              }else{
                $("#contestants option[value='"+resp[1]+"']").text($("#team_name").attr('value'))
                }

              <% unless prelim.contestant %>$.getScript('<%= edit_team_season_url(@season) %>?contestant='+resp[1])<% end %>
            }else{
              var errors = resp[1]["errors"]
              for(var i in errors){
                $(".errors").append("<p class='error'>"+errors[i]+"</p>")
              }
            }
            },
          
            error: function() {
              //called when there is an error
            },
          });
          return false;
        });

        $("#reset_tutor").bind("click", function(e){
          $("#tutor").attr("value","")
          $("#tutor").enable()
          $(this).hide()
          e.preventDefault();
        })

        $("#tutor").bind( "keydown", function( event ) {
         if ( event.keyCode === $.ui.keyCode.TAB && $( this ).data( "autocomplete" ).menu.active ) {
          event.preventDefault();
         }
       }).autocomplete({
         minLength: 3,
         source: function( request, add ) {
           $.getJSON("<%= url_for [:possible_tutors, @season] %>?search="+$("#tutor").attr("value"), function(data){
            var suggestions = [];
            $.each(data,function(i,val){
              suggestions.push(val[0]);
            })
            add(suggestions);
          })
         },
         focus: function() {
          // prevent value inserted on focus
         return false;
         },
         select: function( event, ui ) {
           $("#tutor").attr("value", ui.item.value)
           $("#tutor").disable();
           $("#reset_tutor").show();
           return false;
         }
       });
    });
  <% end %>
</div>
