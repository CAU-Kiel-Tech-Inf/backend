<div id="actions">
  <% link_to new_person_url do %>
    <%= image_tag('actions/add.png') %><%= t "views.new_person" %>
  <% end %>
</div>

<h1><%= t "views.administration" %></h1>

<% tabnav :administration do %>

  <% show_to :administrator do %>
    <div id="filter" style="vertical-align: middle">
      <fieldset style="">
        <legend>Filter ausw√§hlen</legend>

        <div id="show_teams" style="float: left">
          <div style="padding-top: 2px; margin-left: 0px; margin-right: 10px; float: left">Teamort: </div>
          <div id="location_filter_container" style="width: 200px; position: relative; float: left">
            <%= text_field_tag "location_filter", "", :style => "width: 200px" %><br>
            <div id="location_select" style="position: absolute; left: 0px; background-color: #fff; border: 1px solid #000; display: none">
              <% Contestant.visible.collect(&:location).uniq.sort!{ |a,b| a.downcase <=> b.downcase}.each do |contestantlocation| %>
                <div class="combobox_item location"><%= contestantlocation %></div>
              <% end %>
            </div> 
          </div>
          <div style="padding-top: 2px; margin-left: 25px; margin-right: 10px; display: inline; float: left">Team: </div>
          <select id="team_filter" name="team_filter" style="width: 250px">
            <option class="all" value="all">Alle</option>
            <% Contestant.visible.sort!{ |a,b| a.name.downcase <=> b.name.downcase}.each do |team| %>
              <option value="<%= team.location %>"><%= team.name %></option>
            <% end %>
          </select>
          <br> 
          <div style="margin-top: 10px">
            <span style="margin-right: 23px;">Rolle:</span>
            <%= select_tag "role_filter", options_for_select(["Alle"].concat(Role.all.collect{|role| role.to_s}.uniq)) %>
          </div>
        </div>
      </fieldset><br>
    </div>
  <% end %>

  <table class="data-table tablesorter" id="person_table">
    <thead>
      <%= render :partial => "person_table_head" %>
    </thead>
    <tbody>
      <%= render :partial => "person", :collection => @people.sort!{|a,b| a.last_name.downcase <=> b.last_name.downcase} %>
    </tbody>
  </table>

  <h2><%=t "headers.hidden_people" %></h2>

  <table class="data-table tablesorter" id="blocked_person_table">
    <thead>
      <%= render :partial => "person_table_head" %> 
    </thead>
    <tbody>
      <%= render :partial => "person", :collection => @hidden_people.sort!{|a,b| a.last_name.downcase <=> b.last_name.downcase} %>
    </tbody>
  </table>

  <% show_to :administrator do %>
    <% javascript_tag do %>

      String.prototype.trim = function () {
        return this.replace(/^\s*/, "").replace(/\s*$/, "");
      }

      $(function() {
        $("div#location_select").width($("#location_filter").width())

        $("#location_filter").blur(function() {
          if(!$("#location_select").data('isover')) {
            $("#location_select").hide()
          }
        })

        $(".location").hover(function() { $("#location_select").data('isover', 1); }, 
          function() { $("#location_select").data('isover', 0); }
        )

        $(".location").bind('click', function() {
          $("#location_filter").val($(this).html())
          $("#location_select").hide()
          update_location_list()
        })

        $("#location_filter").bind('dblclick', function() {
          $("#location_select").show()
        })
 
        $("#location_filter").keyup(function() {
          var str = $(this).val()
          $("div.location", $("#location_select")).each(function(index) {
            if($(this).html().match(new RegExp(str, "i")) != null) {
              $(this).show()
            } else {
              $(this).hide()
            }
          })
          $("#location_select").show()
          update_location_list()
        })
              
        $("#location_filter").change(function() {
          //alert($(this).val());
          //update_location_list()
        })
      })

      function update_location_list() {
        // Update team select box
        $("select#team_filter option").each(function(index) {
          if($(this).is('.all')) {
            return true;
          }
          if($(this).val().match(new RegExp($("#location_filter").val(), "i")) != null) {
            $(this).show()
          } else {
            $(this).hide()
          }
        })

        if(!$("select#team_filter :selected").is(':visible')) {
          $("select#team_filter").val("all").attr("selected", "selected")
        }

        var filter = $("#location_filter").val()
        var regexp = new RegExp(filter, "i")
        var role = $("div#show_teams select#role_filter :selected").val()

        $("tr.person").each(function(index) {
          var showPerson = true;
          var personID = $(this).attr('id')

          // Check each person against location matching
          var foundLocation = false;
          if($("#location_filter").val() != "") {
            var loc_string = $("td#p_teams_" + personID + " span#person_location_" + personID, $(this)).html().split(";")
            var i;
            for (i=0; i<loc_string.length; i=i+1) {
              if(loc_string[i].match(regexp) != null) {   
                foundLocation = true;
                //return false;
              }
            }
          } else {
            foundLocation = true;
          }
          if(!foundLocation) {
            showPerson = false;
          }


          // Check each person against team matching
          if(true && showPerson) {
            var teamMatch = false;
            if(!$("div#show_teams select#team_filter :selected").is('.all')) {
              if(isInTeam(personID, $("div#show_teams select#team_filter :selected").text())) {
                teamMatch = true;
              }
            } else {
              teamMatch = true;
            }
            if(!teamMatch) {
              showPerson = false;
            }
          }

          // Check each person against role matching
          if(true && showPerson) {
            var roleMatch = false;
            if($("div#show_teams select#role_filter :selected").val() != 'Alle') {
              var roles = $("span#role_text_" + personID, $(this)).html().trim().split(";")
              var i;
              for (i=0; i<roles.count; i=i+1) {
                if(roles[i] == role) {
                  roleMatch = true;
                }
              }
            } else {
              roleMatch = true;
            }
            if(!roleMatch) {
              showPerson = false;
            }
          }

          // Show or hide person
          if(showPerson) {
            $(this).show()
          } else {
            $(this).hide()
          }
        })
      }

      $(function() {
        $(".team_tooltip").bind('mouseenter', function() {
          $(".team_list", this).fadeIn(250)
        })
        $(".team_tooltip").bind('mouseleave', function() {
          $(".team_list", this).fadeOut(250)
        })
        $(".team_tooltip .team_list").bind('mouseenter', function() {
          $(this).fadeOut()
        })

        $("div#show_teams select#team_filter").bind('change', function() {
          update_location_list()
        })

        $("div#show_teams select#role_filter").bind('change', function() {
          update_location_list()
        })
      })

      function isInTeam(personID, option) {
        var found = false;
        $("span#team_text_" + personID).each( function(index) {
          if($(this).html() == option) {
            found = true;
            return false;
          }
        })
        return found;
      }

      $(function() {
        $("#person_table").tablesorter({sortList: [[1,0]]});
        $("#blocked_person_table").tablesorter({sortList: [[1,0]]});
      })
    <% end %>
  <% end %>

<% end %>


